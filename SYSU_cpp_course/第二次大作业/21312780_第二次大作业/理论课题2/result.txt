

# 请老师在批改作业之前看一下README.md文件，谢谢

# 每一题的测试基本上在main里面都独立出一个函数
# 这样打印调用和打印更加清晰


# main.cpp里面用条件编译写了两个main()函数
# 其中一个专门测试ShapeFile相关功能 -- 两个main不能同时放开

//第一个main()如下：
int main()
{
	//test1();
	//test2();
	test3();
	return 0;
}

# test1
# 测试内容
# 1.Point类相关功能
# 2.Edge类相关功能
# 3.Circle类相关功能
void test1()
{
	Point p1(0, 0);
	Point p2(3, 4);
	cout << p1 << " " << p2 << endl;
	Point p3(p1);
	p3.Move(1, 1);
	cout << p3 << endl;
	Edge e1(p1, p2);
	e1.Print();
	cout << e1.Length() << endl;

	Circle c1(p2, 3);
	c1.Print();
	c1.Move(-3, -4);
	c1.Print();
}
//输出结果：

(0,0) (3,4)
(1,1)

第一个端点为(0,0)
第二个端点为(3,4)
长度为5

5
class Circle
  the radius is:3
  the center is (3,4)
  the circumference is:18.84
  the area is:28.26

class Circle
  the radius is:3
  the center is (0,0)
  the circumference is:18.84
  the area is:28.26


# test2
# 测试内容：
# 1.多边形类相关功能、智能指针的使用
# 2.多边形信息的打印
void test2()
{
	//Point p1_(0, 0);
	//Point p2_(0, 3);
	//Point p3_(1, 0);
	//Point p4_(1, 3);
	//Edge e1_(p1, p2);
	//Edge e2_(p2, p4);
	//Edge e3_(p3, p4);
	//Edge e4_(p3, p1);
	Point p1(0, 0);
	Point p2(3, 0);
	Point p3(0, 4);
	Edge e1(p1, p2);
	Edge e2(p1, p3);
	Edge e3(p2, p3);
	//以后要注意 -- 智能指针的构造一定要是new的 -- 不能是栈上的空间
	shared_ptr<Edge>ptr1(new Edge(p1, p2));
	shared_ptr<Edge>ptr2(new Edge(p1, p3));
	shared_ptr<Edge>ptr3(new Edge(p2, p3));
	vector<shared_ptr<Edge>>arr = { ptr1,ptr2,ptr3 };
	//vector<shared_ptr<Edge>>arr = { make_shared<Edge>(e1),make_shared<Edge>(e2),make_shared<Edge>(e3) };
	//vector<Edge*>arr = { &e1,&e2,&e3 };
	Polygon p(arr);
	cout << p.Area() << endl;
	cout << "print Polygon info" << endl;
	p.Print();
}

//输出结果：
6  （Area()的调用）
print Polygon info
该多边形的信息为：
begin{

第一个端点为(0,0)
第二个端点为(3,0)
长度为3


第一个端点为(0,0)
第二个端点为(0,4)
长度为4


第一个端点为(3,0)
第二个端点为(0,4)
长度为5

Area:6
Circumference:12
}end



# test3
# 测试内容：
# 图形的交并运算
# 多边形的Print()
# tips:两个条件编译不能同时放开 -- 是两个测试用例

# 经过以下测试结果 -- 交并运算是正确的

void test3()
{
	//测试交并
#if 1
	shared_ptr<Polygon>ptr1(new Polygon(0, 0, 4, 4));
	shared_ptr<Polygon>ptr2(new Polygon(0, 0, 2, 2));
	shared_ptr<Polygon>ptr0(new Polygon(0, 0, 6, 6));
	ptr_shape ptr3 = ptr1 | ptr2 | ptr0;
	if (ptr3 == nullptr)
	{
		cout << "null" << endl;
		return;
	}
	ptr3->Print();
	ptr_shape ptr4 = ptr1 & ptr2 | ptr0;
	if (ptr4 == nullptr)
	{
		cout << "null" << endl;
		return;
	}
	ptr4->Print();
#endif
#if 0
	shared_ptr<Circle>ptr1(new Circle(Point(0, 0), 1.5));
	shared_ptr<Circle>ptr2(new Circle(Point(0, 0), 2));
	shared_ptr<Circle>ptr0(new Circle(Point(0, 0), 1));
	ptr_shape ptr3 = ptr1 | (ptr2 & ptr0);
	if (ptr3 == nullptr)
	{
		cout << "null" << endl;
		return;
	}
	ptr3->Print();
#endif
}

//测试1输出结果

该多边形的信息为：
begin{

第一个端点为(-3,-3)
第二个端点为(-3,3)
长度为6


第一个端点为(-3,3)
第二个端点为(3,3)
长度为6


第一个端点为(3,-3)
第二个端点为(3,3)
长度为6


第一个端点为(3,-3)
第二个端点为(-3,-3)
长度为6

Area:36
Circumference:24
}end
该多边形的信息为：
begin{

第一个端点为(-3,-3)
第二个端点为(-3,3)
长度为6


第一个端点为(-3,3)
第二个端点为(3,3)
长度为6


第一个端点为(3,-3)
第二个端点为(3,3)
长度为6


第一个端点为(3,-3)
第二个端点为(-3,-3)
长度为6

Area:36
Circumference:24
}end


//测试2输出结果

class Circle
  the radius is:1.5
  the center is (0,0)
  the circumference is:9.42
  the area is:7.065





# 第二个main()的测试结果
# ShapeFile的测试
more than one of the Polygon is unable to calculate!
more than one of the Polygon is unable to calculate!
more than one of the Polygon is unable to calculate!
more than one of the Polygon is unable to calculate!
class Circle
  the radius is:2
  the center is (4,2)
  the circumference is:12.56
  the area is:12.56

class Circle
  the radius is:2.5
  the center is (1,2)
  the circumference is:15.7
  the area is:19.625

该多边形的信息为：
begin{

第一个端点为(1,2)
第二个端点为(3,2)
长度为2


第一个端点为(3,2)
第二个端点为(3,4)
长度为2


第一个端点为(3,4)
第二个端点为(1,2)
长度为2.82843

Area:2
Circumference:6.82843
}end
该多边形的信息为：
begin{

第一个端点为(2,2)
第二个端点为(4,2)
长度为2


第一个端点为(4,2)
第二个端点为(4,3)
长度为1


第一个端点为(4,3)
第二个端点为(3,3)
长度为1


第一个端点为(3,3)
第二个端点为(2,2)
长度为1.41421

Area:1.41421
Circumference:5.41421
}end
该多边形的信息为：
begin{

第一个端点为(3,2)
第二个端点为(4,2)
长度为1


第一个端点为(4,2)
第二个端点为(5,6)
长度为4.12311


第一个端点为(5,6)
第二个端点为(3,4)
长度为2.82843


第一个端点为(3,4)
第二个端点为(3,2)
长度为2

Area:2
Circumference:9.95153
}end